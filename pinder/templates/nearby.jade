extends ./base.jade

block page_content
   //- .col-md-4(style='padding-left:30px;')
   //-    .row
   #floating(style="margin-left:75%")
    form.form-block#search-form(role='form')
      .form-group
         input.form-control#search-query(type='text', placeholder='Search a place')
      .form-group
         input.form-control#search-distance(type='text', placeholder='Search radius', value='5')
      .form-group
         button#location-search(type='button',class='btn btn-info')
            | Search
      .row
   .col-md-9(style="margin-top:25px")
      #map(style='width: 99%; height: 600px; background: grey; margin-right: 1%')

block post_scripts
   link(rel='stylesheet', type='text/css', href='http://js.api.here.com/v3/3.0/mapsjs-ui.css')
   script(type='text/javascript', charset='UTF-8', src='http://js.api.here.com/v3/3.0/mapsjs-core.js')
   script(type='text/javascript', charset='UTF-8', src='http://js.api.here.com/v3/3.0/mapsjs-service.js')
   script(type='text/javascript', charset='UTF-8', src='http://js.api.here.com/v3/3.0/mapsjs-mapevents.js')
   script(type='text/javascript', charset='UTF-8', src='http://js.api.here.com/v3/3.0/mapsjs-ui.js')
   script(src='/static/tagsinput/bootstrap-tagsinput.js')
   script(src='/static/js/typeahead.js')
   script(src='/static/js/jquery.datetimepicker.js')
   script(src="/static/js/jquery.noty.packaged.min.js")

   script
      $("#target-interest").select2({
            tags: true,
            tokenSeparators: [','],
            minimumInputLength: 3,
            createSearchChoice: function(term, data) {
                   if ($(data).filter(function() {
                     return this.text.localeCompare(term) === 0;
                   }).length === 0) {
                     return {
                       id: term,
                       text: term
                     };
                   }
                 },
            multiple: true,
         });


      function addMarkerToGroup(group, coordinate, html) {
        var marker = new H.map.Marker(coordinate);
        // add custom data to the marker
        marker.setData(html);
        group.addObject(marker);
      }

      var location_long = 0, location_lat = 0;
      var app_id = '{{ HERE_APP_ID }}',
         app_code = '{{ HERE_APP_CODE }}';

      function moveMapToQC(map){
        map.setCenter({lat:14.64755, lng:121.05118});
        map.setZoom(14);
      }

      //Step 1: initialize communication with the platform
      var platform = new H.service.Platform({
      app_id: app_id,
       app_code: app_code,
       useCIT: true
      });
      var defaultLayers = platform.createDefaultLayers();

      //Step 2: initialize a map  - not specificing a location will give a whole world view.
      var map = new H.Map(document.getElementById('map'), defaultLayers.normal.map);
      window.mymap = map;
      //Step 3: make the map interactive
      // MapEvents enables the event system
      // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
      var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

      // Create the default UI components
      var ui = H.ui.UI.createDefault(map, defaultLayers);

      moveMapToQC(map);

      function doSearch(){
         var query = $("input#search-query").val();
         var dist = $("input#search-distance").val();

         $.ajax({
            // url: '//geocoder.cit.api.here.com/6.2/geocode.json',
            // data: {'searchtext': query, 'app_id': app_id, 'app_code':app_code, 'gen': 6},
            //- url: '//places.demo.api.here.com/places/v1/discover/search',
            //- data: {'at': location_long + "," + location_lat,
            //-        'accept': 'application/json',
            //-        'q': query, 'app_id': app_id, 'app_code':app_code},

            url: "/nearby/location/",
            data: { 'address': query , "distance": dist},
            dataType: 'json',
            success: function(data){
               console.log('removing previous objects');
               // remove previous search
               try{
                 map.removeObjects(map.getObjects());
               }catch(err){}

               var group = new H.map.Group();
               map.addObject(group);

               // add 'tap' event listener, that opens info bubble, to the group
               group.addEventListener('tap', function (evt) {
                  // event target is the marker itself, group is a parent event target
                  // for all objects that it contains

                  // remove other infobubbles
                  var bubs = ui.getBubbles();
                  var data_ = evt.target.getData();
                  for (i=0; i < bubs.length; i++){ui.removeBubble(bubs[i]);}

                  $('span#study-location-name').text(" "+data_.first_name);
                  $('input[name="here_id"]').val(data_.res.id);
                  $('input[name="longitude"]').val(data_.res.coordinates[0]);
                  $('input[name="latitude"]').val(data_.res.coordinates[1]);
                  $('input[name="place_name"]').val(data_.first_name);

                  var bubble =  new H.ui.InfoBubble(evt.target.getPosition(), {
                     // read custom data
                     content: data_.html
                  });
                  // show info bubble
                  ui.addBubble(bubble);
               }, false);

               // parse data and add markers on the map
               var results = data.result;
               console.log(results)
               for (var i in results){
                  var result = results[i];
                  console.log(result);
                  console.log("Adding: "+ result.first_name+ " @ " +result.coordinates[0] + ","+result.coordinates[1])
                  // add marker on map
                  addMarkerToGroup(group, {lat: result.coordinates[0], lng:result.coordinates[1]},
                     {'res':result,
                     'title':result.first_name,
                     'html':'<div style="width:220px;padding:2px 5px"><h4>'+ result.first_name + '</h4><div id="nearby-user"></div>'+
                     '<br/><img src="https://graph.facebook.com/'+ result.fb_id +'/picture?type=large" style="width:50%"/>'+
                     '<br/><span class="infobubble-vicinity">Location: '+result.location+
                     '<span><br/><span class="infobubble-vicinity">Hometown: '+result.hometown+
                     '<span><br/><a href="#create-session-modal" data-target="#create-session-modal"'+
                     'data-toggle="modal">Contact '+ result.first_name +'!</a></div>'});
               }
               map.setViewBounds(group.getBounds());

               //- window.setTimeout(function(){
               //-    if (map.getZoom() > 13){
               //-    map.setZoom(map.getZoom() - 1, true);}
               //- },80);

            },
            error: function(data){
               console.log('error');
            }
         });
      }
      $('button#location-search').click(doSearch);
      $('form#search-form').submit(function(e){
         e.preventDefault();
         doSearch();
      });

block css
   link(rel='stylesheet', type='text/css', href='/static/css/jquery.datetimepicker.css')
   link(rel='stylesheet', type='text/css', href='/static/tagsinput/bootstrap-tagsinput.css')
   style
      span.infobubble-vicinity{font-size: 12px;}
      .modal-body{padding: 5px 70px}
      #reserved-sessions-here{font-size: 10px}
      #floating{
        position: absolute;
        top: 110;
        left: 70;
        z-index: 10;
      }
